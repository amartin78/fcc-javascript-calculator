{"version":3,"sources":["components/Calculator.js","index.js"],"names":["Elements","props","Fragment","id","className","type","value","amount","readOnly","map","b","key","onClick","Calculator","handleChange","event","input","target","number","setState","fullInput","splice","numberCp","push","length","result","getResult","validate","a","c","toString","indexOf","calculation","num1","ope","num2","parseFloat","symbols","inputCp","slice","i","forEach","e","idx","res","state","bind","this","React","Component","Main","ReactDOM","render","document","getElementById"],"mappings":"mQAGA,SAASA,EAASC,GAWV,OACI,kBAAC,IAAMC,SAAP,KACI,2BAAOC,GAAG,UAAUC,UAAU,aAAaC,KAAK,QAAQC,MAAOL,EAAMM,OAAQC,UAAQ,IAX7E,CACZ,CAAC,QAAS,KAAM,CAAC,QAAS,KAAM,CAAC,OAAQ,KACzC,CAAC,QAAS,QAAS,KAAM,CAAC,OAAQ,KAAM,CAAC,OAAQ,KAAM,CAAC,MAAO,KAC/D,CAAC,WAAY,KAAM,CAAC,SAAU,KAAM,CAAC,SAAU,KAAM,CAAC,MAAO,KAAM,CAAC,MAAO,KAC3E,CAAC,QAAS,KAAM,CAAC,MAAO,KAAM,CAAC,OAAQ,KAAM,CAAC,UAAW,KAAM,CAAC,WAAY,MAS5DC,IAAI,SAACC,GAAD,OACR,4BAAQP,GAAIO,EAAE,GAAIC,IAAKD,EAAE,GAAIE,QAASX,EAAMW,UAAWN,MAAOI,EAAE,IACpD,UAAPA,EAAE,GAAaA,EAAE,GAAGA,EAAE,O,IAQ9BG,E,YAEjB,aAAe,IAAD,8BACV,+CAaJC,aAAe,SAACC,GAEZ,IAAIC,EAAQD,EAAME,OAAOX,MAEzB,GAAc,MAAVU,EAA0B,MAAVA,EAA0B,MAAVA,EAA0B,MAAVA,EAChD,GAAoB,KAAhB,EAAKE,OAAgC,MAAhB,EAAKA,OACb,MAAVF,GACC,EAAKE,OAAS,EAAKA,OAASF,EAC5B,EAAKG,SAAS,CAACZ,OAAQ,EAAKW,WAE5B,EAAKE,UAAUC,QAAQ,EAAG,EAAGL,GAC7B,EAAKE,OAAS,GACd,EAAKC,SAAS,CAACZ,OAAQ,EAAKe,gBAE7B,CAEH,GADA,EAAKF,UAAUG,KAAK,EAAKL,QACX,MAAVF,EAA0B,MAAVA,GACZ,EAAKI,UAAUI,OAAS,EAAG,CAC3B,IAAIC,EAAS,EAAKC,UAAU,EAAKN,WACjC,EAAKD,SAAS,CAACZ,OAAQkB,IACvB,EAAKH,SAAWG,EAGxB,EAAKL,UAAUG,KAAKP,GACpB,EAAKE,OAAS,QAEf,GAAc,MAAVF,EAAe,CACtB,EAAKI,UAAUG,KAAK,EAAKL,QACzB,IAAIO,EAAS,EAAKC,UAAU,EAAKN,WACjC,EAAKD,SAAS,CAACZ,OAAQkB,IACvBT,EAAQ,GACR,EAAKE,OAAS,GACd,EAAKE,UAAUG,KAAKE,OACH,UAAVT,GACPA,EAAQ,GACR,EAAKE,OAAS,GACd,EAAKE,UAAY,GACjB,EAAKD,SAAS,CAACZ,OAAQ,MAEvB,EAAKW,OAAS,EAAKS,SAAS,EAAKT,OAAQF,GACzC,EAAKM,SAAW,EAAKJ,OACrB,EAAKC,SAAS,CAACZ,OAAQ,EAAKW,WAvDtB,EA4DdS,SAAW,SAACC,EAAGC,GAIX,MAAU,MAAND,GAAmB,MAANC,EACN,IACM,KAAND,GAAkB,MAANC,EACZ,KACM,MAANA,IAA4C,IAA/BD,EAAEE,WAAWC,QAAQ,KACnCH,EAEAA,EAAIC,GAvEJ,EA6EdG,YAAc,SAACC,EAAMC,EAAKC,GAItB,OAHAF,EAAOG,WAAWH,GAClBE,EAAOC,WAAWD,GAEXD,GACH,IAAK,IACD,OAAOD,EAAOE,EAClB,IAAK,IACD,OAAOF,EAAOE,EAClB,IAAK,IACD,OAAOF,EAAOE,EAClB,IAAK,IACD,OAAOF,EAAOE,EAClB,QACI,MAAO,KA3FL,EA+FdT,UAAY,SAACV,GAIT,IAHA,IAAMqB,EAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,MAC7BC,EAAUtB,EAAMuB,MAAM,GAFT,WAIXC,GACJF,EAAQG,QAAQ,SAACC,GACb,GAAIL,EAAQG,GAAG,KAAOE,EAAIL,EAAQG,GAAG,KAAOE,EAAG,CAC3C,IAAIC,EAAM3B,EAAMe,QAAQW,GACpBE,EAAM,EAAKZ,YAAYhB,EAAM2B,EAAI,GAAID,EAAG1B,EAAM2B,EAAI,IACtD3B,EAAMK,OAAOsB,EAAI,EAAG,EAAGC,OAL3BJ,EAAE,EAAGA,EAAEH,EAAQb,OAAQgB,IAAM,EAA7BA,GASR,OAAOxB,EAAM,IAzGb,EAAKI,UAAY,GACjB,EAAKF,OAAS,GACd,EAAKI,SAAW,GAEhB,EAAKuB,MAAQ,CACTtC,OAAQ,GAGZ,EAAKO,aAAe,EAAKA,aAAagC,KAAlB,gBAXV,E,sEA+GJ,IAAD,OACL,OACI,yBAAK1C,UAAU,kBACX,kBAACJ,EAAD,CACIO,OAAQwC,KAAKF,MAAMtC,OACnBK,QAAS,kBAAM,EAAKE,qB,GAtHAkC,IAAMC,W,0CCrBzBC,E,iLAGb,OACI,kBAAC,IAAMhD,SAAP,KACI,kBAAC,EAAD,W,GALkB8C,IAAMC,WAWxCE,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,S","file":"static/js/main.0c9dde4a.chunk.js","sourcesContent":["import React from 'react'\n\n\nfunction Elements(props) {\n\n        const buttons = [\n            ['seven', '7'], ['eight', '8'], ['nine', '9'], \n            ['clear', 'clear', 'C'], ['four', '4'], ['five', '5'], ['six', '6'],\n            ['multiply', '*'], ['divide', '/'], ['equals', '='], ['one', '1'], ['two', '2'],\n            ['three', '3'], ['add', '+'], ['zero', '0'], ['decimal', '.'], ['subtract', '-']\n\n        ]\n            \n\n        return (\n            <React.Fragment>\n                <input id=\"display\" className='text-right' type=\"input\" value={props.amount} readOnly></input>\n                {\n                    buttons.map((b) => \n                        <button id={b[0]} key={b[0]} onClick={props.onClick()} value={b[1]}>\n                            {b[1]==='clear'?b[2]:b[1]}\n                        </button>\n                    )\n                }\n            </React.Fragment>\n        )\n}\n\nexport default class Calculator extends React.Component {\n\n    constructor() {\n        super()\n\n        this.fullInput = []\n        this.number = ''\n        this.numberCp = ''\n\n        this.state = {\n            amount: 0\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange = (event) => {\n\n        let input = event.target.value\n\n        if (input === '/' | input === '*' | input === '+' | input === '-' ) {\n            if (this.number === '' | this.number === '-') {\n                if(input === '-') {\n                    this.number = this.number + input\n                    this.setState({amount: this.number})\n                } else {\n                    this.fullInput.splice(-1, 1, input)\n                    this.number = ''\n                    this.setState({amount: this.numberCp})\n                }\n            } else {\n                this.fullInput.push(this.number)\n                if (input === '+' | input === '-' ) {\n                    if (this.fullInput.length > 2) {\n                        let result = this.getResult(this.fullInput)\n                        this.setState({amount: result})\n                        this.numberCp = result\n                    }\n                }\n                this.fullInput.push(input)\n                this.number = ''\n            }\n        } else if (input === '=') {\n            this.fullInput.push(this.number)\n            let result = this.getResult(this.fullInput)\n            this.setState({amount: result})\n            input = ''\n            this.number = ''\n            this.fullInput.push(result)\n        } else if (input === 'clear') {\n            input = ''\n            this.number = ''\n            this.fullInput = []\n            this.setState({amount: 0})\n        } else {   \n            this.number = this.validate(this.number, input)\n            this.numberCp = this.number\n            this.setState({amount: this.number})\n        }\n        \n    }\n\n    validate = (a, c) => {\n\n        let str= ''\n\n        if (a === '0' && c === '0') {\n            return '0'\n        } else if (a === '' && c === '.') {\n            return '0.'\n        } else if (c === '.' && a.toString().indexOf('.') !== -1) {\n            str = a\n        } else {\n            str = a + c\n        }\n\n        return str  \n    }\n\n    calculation = (num1, ope, num2) => {\n        num1 = parseFloat(num1)\n        num2 = parseFloat(num2)\n\n        switch(ope) {\n            case '/':\n                return num1 / num2\n            case '*':\n                return num1 * num2\n            case '+':\n                return num1 + num2\n            case '-':\n                return num1 - num2\n            default:\n                return ''\n        }\n    }\n\n    getResult = (input) => {\n        const symbols = [['/', '*'], ['+', '-']]\n        const inputCp = input.slice(0)\n\n        for(let i=0; i<symbols.length; i++) {\n            inputCp.forEach((e) => {\n                if (symbols[i][0] === e | symbols[i][1] === e) {\n                    let idx = input.indexOf(e)\n                    let res = this.calculation(input[idx-1], e, input[idx+1])\n                    input.splice(idx-1, 3, res)\n                }\n            })\n        }\n        return input[0]\n    }\n\n    render() {\n        return (\n            <div className='container grid'>\n                <Elements \n                    amount={this.state.amount}\n                    onClick={() => this.handleChange}\n                />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Calculator from './components/Calculator'\n\n\nexport default class Main extends React.Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <Calculator />\n            </React.Fragment>\n        )\n    }\n}\n\nReactDOM.render(<Main />, document.getElementById('app'));\n\n\n"],"sourceRoot":""}